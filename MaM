import numpy as np

def simp(f, a, b, n):
    h = (b-a) / n                              # steglengde
    sum_ = f(a) + f(b)                         # startet med endpunkter 
    
    for i in range(1, n):                      # for loop for å iterere over mellom punkter 
        koeffi = 4 if i % 2 else 2             # setter lik 4 dersom oddetall, 2 partall
        sum_ += koeffi * f(a + i*h)
    return (h / 3) * sum_

def f(t): return np.exp(-t) / (t+1)            # definerer selve funksjonen
def f_x(x): return simp(f,0,x, 100000) - 0.2   #simp kjøres på funksjonen

def derivert_f_x(x, h= 0.00001):                #derivasjons funksjon 
    return (f_x(x+h) - f_x(x-h)) / (2*h)

def newton_m(f, df, x_0, tol=0.000001, maks= 1000):
    for _ in range(maks):
        x_1 = x_0 - f(x_0) / df(x_0)                     #newtons iterasjonn
        if abs(x_1 -x_0) < tol:                          # skjekker konvergens
            return x_1
        x_0 = x_1
    return x_0

svar = newton_m(f_x, derivert_f_x, x_0 = 1)
print(f"Løsningen er x ≈ {svar:.5f}")